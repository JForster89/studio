// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Analyzes product data and ingredient lists to detect potential allergens.
 *
 * - analyzeProductAllergens - A function that handles the allergen analysis process.
 * - AnalyzeProductAllergensInput - The input type for the analyzeProductAllergens function.
 * - AnalyzeProductAllergensOutput - The return type for the analyzeProductAllergens function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeProductAllergensInputSchema = z.object({
  productName: z.string().describe('The name of the product.'),
  ingredients: z.string().describe('A comma-separated list of ingredients.'),
  allergensProfile: z.string().describe('A comma-separated list of allergens the user is allergic to.'),
  barcode: z.string().optional().describe('The barcode of the product, if available.'),
  productDescription: z.string().optional().describe('A description of the product, if available.'),
});
export type AnalyzeProductAllergensInput = z.infer<typeof AnalyzeProductAllergensInputSchema>;

const AnalyzeProductAllergensOutputSchema = z.object({
  containsAllergens: z.boolean().describe('Whether the product contains any of the specified allergens.'),
  allergensList: z.array(z.string()).describe('A list of allergens detected in the product.'),
  safeToConsume: z.boolean().describe('Whether the product is safe for the user to consume based on their allergen profile.'),
  reasoning: z.string().describe('The reasoning behind the allergen detection.'),
});
export type AnalyzeProductAllergensOutput = z.infer<typeof AnalyzeProductAllergensOutputSchema>;

export async function analyzeProductAllergens(input: AnalyzeProductAllergensInput): Promise<AnalyzeProductAllergensOutput> {
  return analyzeProductAllergensFlow(input);
}

const analyzeProductAllergensPrompt = ai.definePrompt({
  name: 'analyzeProductAllergensPrompt',
  input: {schema: AnalyzeProductAllergensInputSchema},
  output: {schema: AnalyzeProductAllergensOutputSchema},
  prompt: `You are an AI assistant that analyzes product information to detect potential allergens.

  Based on the following product information and the user's allergen profile, determine if the product contains any of the specified allergens and whether it is safe for the user to consume.

  Product Name: {{{productName}}}
  Ingredients: {{{ingredients}}}
  Allergen Profile: {{{allergensProfile}}}
  Barcode: {{{barcode}}}
  Product Description: {{{productDescription}}}

  Respond in a JSON format that conforms to the following schema:
  ${JSON.stringify(AnalyzeProductAllergensOutputSchema.shape, null, 2)}

  Reasoning: Explain your reasoning for the allergen detection. Include the ingredients and explain why they trigger allergies in the product.
`,
});

const analyzeProductAllergensFlow = ai.defineFlow(
  {
    name: 'analyzeProductAllergensFlow',
    inputSchema: AnalyzeProductAllergensInputSchema,
    outputSchema: AnalyzeProductAllergensOutputSchema,
  },
  async input => {
    const {output} = await analyzeProductAllergensPrompt(input);
    return output!;
  }
);
